# frontend/Dockerfile.frontend - Multi-stage build for development and production

# Development stage
FROM node:20 as development

WORKDIR /app

# Copy package.json first to allow npm install to run and generate package-lock.json
COPY package.json ./

# Install node modules. This will also generate package-lock.json if it doesn't exist.
RUN npm install

# Copy the rest of the application files, including the newly generated package-lock.json
COPY . .

# Expose port (React dev server default)
EXPOSE 3000

# Default command for development
CMD ["npm", "start"]

# Production build stage
FROM node:20 as build

WORKDIR /app

# Copy package files
COPY package.json package-lock.json .env.production ./

# Install all dependencies (including dev dependencies needed for build)
RUN if [ -f package-lock.json ]; then \
        npm ci; \
    else \
        npm install; \
    fi

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine as production

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built application from build stage
COPY --from=build /app/build/. /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
