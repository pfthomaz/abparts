# docker-compose.dev.yml - Development Environment
# version: "3.9"

services:
  # PostgreSQL Database Service
  db:
    image: postgres:16
    container_name: abparts_db_dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-abparts_dev}
      POSTGRES_USER: ${POSTGRES_USER:-abparts_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-abparts_pass}
    volumes:
      - db_data_dev:/var/lib/postgresql/data
      - ./init_db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:latest
    container_name: abparts_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  # FastAPI Backend Service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: abparts_api_dev
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-abparts_user}:${POSTGRES_PASSWORD:-abparts_pass}@db:5432/${POSTGRES_DB:-abparts_dev}
      REDIS_URL: redis://redis:6379/0
      SMTP_SERVER: ${SMTP_SERVER:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      FROM_EMAIL: ${FROM_EMAIL}
      BASE_URL: ${BASE_URL:-http://localhost:3000}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000,http://127.0.0.1:8000}
      CORS_ALLOW_CREDENTIALS: ${CORS_ALLOW_CREDENTIALS:-true}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    volumes:
      - ./backend:/app # Live reloading for development
      - api_static_images_dev:/app/static/images
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-exclude /app/static/images

  # Celery Worker Service
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: abparts_celery_worker_dev
    environment:
      REDIS_URL: redis://redis:6379/0
      DATABASE_URL: postgresql://${POSTGRES_USER:-abparts_user}:${POSTGRES_PASSWORD:-abparts_pass}@db:5432/${POSTGRES_DB:-abparts_dev}
      SMTP_SERVER: ${SMTP_SERVER:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      FROM_EMAIL: ${FROM_EMAIL}
      BASE_URL: ${BASE_URL:-http://localhost:3000}
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.celery_app worker --loglevel=info

  # PgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4
    container_name: abparts_pgadmin_dev
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@abparts.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
      - ./pgadmin_config/config_local.py:/pgadmin4/config_local.py
    depends_on:
      db:
        condition: service_healthy

  # React Web Frontend Development Server
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
      target: development # Use development stage
    container_name: abparts_web_dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app # Live reloading for development
      - /app/node_modules
    environment:
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-http://localhost:8000}
    depends_on:
      api:
        condition: service_started
    command: sh -c "npm install && npm start"

volumes:
  db_data_dev:
  redis_data_dev:
  pgadmin_data_dev:
  api_static_images_dev: