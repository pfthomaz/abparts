"""Add configuration management tables

Revision ID: f15a2ee5a7b4
Revises: 0203a54bc019
Create Date: 2025-07-31 10:23:40.377259

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f15a2ee5a7b4'
down_revision: Union[str, Sequence[str], None] = '0203a54bc019'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization_configurations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('configuration_key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('created_by_user_id', sa.UUID(), nullable=True),
    sa.Column('updated_by_user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_configurations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('category', sa.Enum('ORGANIZATION', 'PARTS', 'USER_MANAGEMENT', 'LOCALIZATION', 'SYSTEM', name='configurationcategory'), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('data_type', sa.Enum('STRING', 'INTEGER', 'BOOLEAN', 'JSON', 'ENUM', name='configurationdatatype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_system_managed', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('is_user_configurable', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('requires_restart', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=True),
    sa.Column('updated_by_user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_configurations_key'), 'system_configurations', ['key'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_system_configurations_key'), table_name='system_configurations')
    op.drop_table('system_configurations')
    op.drop_table('organization_configurations')
    # ### end Alembic commands ###
